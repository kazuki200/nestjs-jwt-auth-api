model User {
  id            String             @id @default(uuid())
  name          String
  email         String             @unique
  password      String
  verifiedAt    DateTime?
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  deletedAt     DateTime?
  profile       UserProfile?
  role          Role               @default(USER)
  refreshTokens AuthRefreshToken[]
}

model UserProfile {
  id              String    @id @default(uuid())
  userId          String    @unique
  profileImageUrl String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  user            User      @relation(fields: [userId], references: [id])
}

model AuthRefreshToken {
  hashedRefreshToken String   @id
  expiresAt          DateTime
  userId             String
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  USER
}
